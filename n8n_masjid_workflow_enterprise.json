{
  "name": "Masjid AI Enterprise Workflow - Advanced",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook-whatsapp-enterprise",
        "responseMode": "responseNode",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "1",
      "name": "🚪 Enterprise Webhook Gateway",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [200, 400]
    },
    {
      "parameters": {
        "functionCode": "// 🛡️ ENTERPRISE SECURITY & VALIDATION LAYER\nconst crypto = require('crypto');\nconst moment = require('moment');\n\n// Enterprise Configuration\nconst CONFIG = {\n  security: {\n    webhook_secret: 'masjid_enterprise_2024',\n    max_message_length: 4000,\n    rate_limit_per_minute: 30,\n    blocked_numbers: ['+62123456789'],\n    admin_numbers: ['+62812345678', '+62821234567']\n  },\n  ai_models: {\n    primary: 'moonshotai/kimi-k2:free',\n    fallback: 'google/gemma-7b-it:free', \n    vision: 'anthropic/claude-3-haiku:beta',\n    translation: 'meta-llama/llama-3-8b-instruct:free'\n  },\n  apis: {\n    openrouter: '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',\n    supabase_url: 'https://bvaxxlmhrzocbrqiykoqul.supabase.co',\n    supabase_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ2YXh4bG1ocnpvY2JycWl5a29xIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM4NjMxMDMsImV4cCI6MjA2OTQzOTEwM30.GjDhx8BUR7Y4FUS2PZalEeDhKVt_zQWGTEV_5nKKgrg',\n    prayer_api: 'https://api.aladhan.com/v1/timingsByCity',\n    weather_api: 'https://api.openweathermap.org/data/2.5/weather',\n    maps_api: 'AIzaSyDummy123456789',\n    speech_api: 'https://api.elevenlabs.io/v1/text-to-speech'\n  }\n};\n\nconst startTime = Date.now();\nconst body = $input.all()[0].body;\nconst headers = $input.all()[0].headers;\n\n// 🔐 Webhook Signature Verification\nfunction verifyWebhookSignature(payload, signature, secret) {\n  const expectedSignature = crypto\n    .createHmac('sha256', secret)\n    .update(JSON.stringify(payload))\n    .digest('hex');\n  return crypto.timingSafeEqual(\n    Buffer.from(signature, 'hex'),\n    Buffer.from(expectedSignature, 'hex')\n  );\n}\n\n// 📊 Advanced Message Parser (Multi-Provider Support)\nfunction parseMessage(body) {\n  let phone, message, messageType, mediaUrl, location, timestamp;\n  \n  // WhatsApp Business API (Meta)\n  if (body.entry && body.entry[0]?.changes?.[0]?.value?.messages) {\n    const msg = body.entry[0].changes[0].value.messages[0];\n    phone = msg.from;\n    messageType = msg.type;\n    timestamp = msg.timestamp;\n    \n    switch (messageType) {\n      case 'text':\n        message = msg.text.body;\n        break;\n      case 'image':\n        message = msg.image.caption || '[Gambar]';\n        mediaUrl = msg.image.id;\n        break;\n      case 'audio':\n        message = '[Pesan Suara]';\n        mediaUrl = msg.audio.id;\n        break;\n      case 'video':\n        message = msg.video.caption || '[Video]';\n        mediaUrl = msg.video.id;\n        break;\n      case 'document':\n        message = msg.document.caption || '[Dokumen]';\n        mediaUrl = msg.document.id;\n        break;\n      case 'location':\n        message = '[Lokasi]';\n        location = {\n          latitude: msg.location.latitude,\n          longitude: msg.location.longitude,\n          name: msg.location.name,\n          address: msg.location.address\n        };\n        break;\n    }\n  }\n  // Fonnte API\n  else if (body.device && body.message) {\n    phone = body.device;\n    message = body.message;\n    messageType = body.message_type || 'text';\n    mediaUrl = body.file;\n    timestamp = body.date;\n  }\n  // Woowa API\n  else if (body.from && body.body) {\n    phone = body.from;\n    message = body.body;\n    messageType = body.type || 'text';\n    mediaUrl = body.media_url;\n    timestamp = body.timestamp;\n  }\n  // Generic Format\n  else if (body.phone && body.message) {\n    phone = body.phone;\n    message = body.message;\n    messageType = body.type || 'text';\n    mediaUrl = body.media_url;\n    timestamp = body.timestamp || Date.now();\n  }\n  \n  return { phone, message, messageType, mediaUrl, location, timestamp };\n}\n\n// 🧠 Advanced Intent Classification with Context\nfunction classifyIntentAdvanced(message, userContext = {}) {\n  const msg = message.toLowerCase();\n  const time = new Date();\n  const hour = time.getHours();\n  \n  // Time-based context\n  const timeContext = {\n    isNight: hour >= 21 || hour <= 5,\n    isPrayerTime: [5, 12, 15, 18, 19].includes(hour),\n    isFriday: time.getDay() === 5\n  };\n  \n  // Advanced intent patterns with context\n  const intentPatterns = {\n    // Core Services\n    jadwal_shalat: {\n      keywords: ['jadwal shalat', 'waktu shalat', 'adzan', 'subuh', 'dzuhur', 'ashar', 'magrib', 'isya'],\n      priority: timeContext.isPrayerTime ? 10 : 5\n    },\n    kajian_ustadz: {\n      keywords: ['kajian', 'pengajian', 'ceramah', 'ustadz', 'kuliah agama', 'belajar islam'],\n      priority: timeContext.isFriday ? 8 : 5\n    },\n    donasi_zakat: {\n      keywords: ['donasi', 'infaq', 'sedekah', 'zakat', 'transfer', 'rekening', 'qris', 'bayar'],\n      priority: 6\n    },\n    \n    // Advanced Services\n    konsultasi_syariah: {\n      keywords: ['konsultasi', 'tanya ustadz', 'fatwa', 'hukum islam', 'halal haram', 'fiqh'],\n      priority: 7\n    },\n    pendaftaran_nikah: {\n      keywords: ['nikah', 'menikah', 'akad', 'pernikahan', 'kua', 'prnikahan'],\n      priority: 8\n    },\n    layanan_jenazah: {\n      keywords: ['jenazah', 'meninggal', 'kafan', 'pemakaman', 'tahlil', 'doa mayit'],\n      priority: 9\n    },\n    \n    // Community Services\n    program_sosial: {\n      keywords: ['bantuan', 'sosial', 'dhuafa', 'yatim', 'lansia', 'bantuan sosial'],\n      priority: 6\n    },\n    pendidikan_anak: {\n      keywords: ['tpq', 'mengaji', 'anak', 'belajar quran', 'tahfidz', 'madrasah'],\n      priority: 7\n    },\n    kesehatan_rohani: {\n      keywords: ['ruqyah', 'thibbun nabawi', 'pengobatan islam', 'herbal', 'bekam'],\n      priority: 6\n    },\n    \n    // Emergency & Admin\n    emergency_imam: {\n      keywords: ['imam', 'darurat', 'mendesak', 'segera', 'emergency', 'urgent'],\n      priority: 10\n    },\n    admin_masjid: {\n      keywords: ['admin', 'takmir', 'pengurus', 'complaint', 'saran', 'kritik'],\n      priority: 7\n    },\n    \n    // AI & Interactive\n    ai_chat_islamic: {\n      keywords: ['tanya', 'bagaimana', 'kenapa', 'apa itu', 'jelaskan', 'chat', 'diskusi'],\n      priority: 4\n    },\n    voice_command: {\n      keywords: ['[pesan suara]', 'voice', 'audio'],\n      priority: 5\n    },\n    image_analysis: {\n      keywords: ['[gambar]', 'foto', 'image', 'picture'],\n      priority: 5\n    },\n    \n    // Greetings & Social\n    salam_greeting: {\n      keywords: ['assalamualaikum', 'salam', 'halo', 'hai', 'selamat', 'pagi', 'siang', 'malam'],\n      priority: timeContext.isNight ? 3 : 5\n    },\n    doa_request: {\n      keywords: ['doa', 'doakan', 'mohon doa', 'minta doa', 'aamiin'],\n      priority: 8\n    }\n  };\n  \n  // Find best match with priority scoring\n  let bestMatch = { intent: 'ai_chat_islamic', score: 0 };\n  \n  for (const [intent, config] of Object.entries(intentPatterns)) {\n    const keywordMatches = config.keywords.filter(keyword => msg.includes(keyword)).length;\n    const score = keywordMatches * config.priority;\n    \n    if (score > bestMatch.score) {\n      bestMatch = { intent, score };\n    }\n  }\n  \n  return {\n    intent: bestMatch.intent,\n    confidence: Math.min(bestMatch.score / 10, 1),\n    context: timeContext,\n    suggestions: getSuggestions(bestMatch.intent)\n  };\n}\n\n// 💡 Smart Suggestions Based on Intent\nfunction getSuggestions(intent) {\n  const suggestions = {\n    jadwal_shalat: ['reminder shalat', 'kiblat', 'doa setelah shalat'],\n    kajian_ustadz: ['daftar kajian', 'tanya ustadz', 'materi islam'],\n    donasi_zakat: ['kalkulator zakat', 'laporan donasi', 'program sosial'],\n    ai_chat_islamic: ['tanya islam', 'doa harian', 'hadits'],\n    salam_greeting: ['menu layanan', 'jadwal shalat', 'info masjid']\n  };\n  \n  return suggestions[intent] || ['menu', 'bantuan', 'info'];\n}\n\n// 🔒 Security Validation\nfunction validateSecurity(phone, message, headers) {\n  const errors = [];\n  \n  // Check blocked numbers\n  if (CONFIG.security.blocked_numbers.includes(phone)) {\n    errors.push('BLOCKED_NUMBER');\n  }\n  \n  // Check message length\n  if (message && message.length > CONFIG.security.max_message_length) {\n    errors.push('MESSAGE_TOO_LONG');\n  }\n  \n  // Rate limiting check (simplified)\n  const userId = phone.replace(/[^0-9]/g, '');\n  const rateLimitKey = `rate_limit_${userId}_${Math.floor(Date.now() / 60000)}`;\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    isAdmin: CONFIG.security.admin_numbers.includes(phone),\n    rateLimitKey\n  };\n}\n\n// 📱 Clean Phone Number\nfunction cleanPhoneNumber(phone) {\n  if (!phone) return null;\n  \n  phone = phone.replace(/[^0-9+]/g, '');\n  \n  // Indonesian number formatting\n  if (phone.startsWith('0')) {\n    phone = '+62' + phone.substring(1);\n  } else if (phone.startsWith('62')) {\n    phone = '+' + phone;\n  } else if (!phone.startsWith('+')) {\n    phone = '+62' + phone;\n  }\n  \n  return phone;\n}\n\n// Main Processing\nconst parsed = parseMessage(body);\nlet { phone, message, messageType, mediaUrl, location, timestamp } = parsed;\n\n// Clean phone number\nphone = cleanPhoneNumber(phone);\n\n// Validate input\nif (!phone || (!message && !mediaUrl && !location)) {\n  return [{\n    json: {\n      error: 'INVALID_INPUT',\n      hasError: true,\n      errorType: 'validation',\n      received: { phone, message, messageType },\n      timestamp: new Date().toISOString()\n    }\n  }];\n}\n\n// Security validation\nconst security = validateSecurity(phone, message, headers);\nif (!security.isValid) {\n  return [{\n    json: {\n      error: 'SECURITY_VIOLATION',\n      hasError: true,\n      errorType: 'security',\n      securityErrors: security.errors,\n      phone: phone,\n      timestamp: new Date().toISOString()\n    }\n  }];\n}\n\n// Intent classification\nconst classification = classifyIntentAdvanced(message || `[${messageType}]`);\n\n// Prepare output\nconst output = {\n  // Core Data\n  phone: phone,\n  message: message || `[${messageType}]`,\n  messageType: messageType,\n  mediaUrl: mediaUrl,\n  location: location,\n  timestamp: timestamp || new Date().toISOString(),\n  \n  // Classification\n  intent: classification.intent,\n  confidence: classification.confidence,\n  suggestions: classification.suggestions,\n  context: classification.context,\n  \n  // Security & Admin\n  isAdmin: security.isAdmin,\n  securityLevel: security.isAdmin ? 'ADMIN' : 'USER',\n  rateLimitKey: security.rateLimitKey,\n  \n  // Processing Info\n  processingTime: Date.now() - startTime,\n  hasError: false,\n  requiresAI: ['ai_chat_islamic', 'voice_command', 'image_analysis'].includes(classification.intent),\n  requiresHuman: ['emergency_imam', 'admin_masjid', 'layanan_jenazah'].includes(classification.intent),\n  \n  // API Configs\n  config: CONFIG\n};\n\nreturn [{ json: output }];"
      },
      "id": "2",
      "name": "🛡️ Security & Parser",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 400]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.hasError }}",
              "value2": false
            }
          ]
        }
      },
      "id": "3",
      "name": "🔍 Security Gate",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [700, 400]
    },
    {
      "parameters": {
        "url": "={{ $json.config.apis.supabase_url }}/rest/v1/user_profiles",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.config.apis.supabase_key }}"
            },
            {
              "name": "Authorization", 
              "value": "Bearer {{ $json.config.apis.supabase_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "eq.{{ $json.phone }}"
            },
            {
              "name": "select",
              "value": "*"
            }
          ]
        }
      },
      "id": "4",
      "name": "👤 User Context Loader",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [950, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.requiresHuman }}",
              "operation": "equal",
              "value2": "true"
            }
          ]
        }
      },
      "id": "5",
      "name": "🚨 Human Required?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1200, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.requiresAI }}",
              "operation": "equal",
              "value2": "true"
            }
          ]
        }
      },
      "id": "6",
      "name": "🤖 AI Required?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1200, 500]
    },
    {
      "parameters": {
        "functionCode": "// 🚨 EMERGENCY & HUMAN ESCALATION HANDLER\nconst moment = require('moment');\n\nconst data = $input.all()[0].json;\nconst userContext = $node['User Context Loader'].json[0] || {};\n\n// Emergency Response Templates\nconst emergencyResponses = {\n  emergency_imam: {\n    response: `🚨 *EMERGENCY - IMAM DIBUTUHKAN*\\n\\n⚡ Permintaan Anda telah diteruskan ke:\\n\\n👨‍🏫 **Ustadz Ahmad Dahlan**\\n📱 +62-813-1111-2222\\n⏰ Standby 24/7\\n\\n👨‍🏫 **Ustadz Muhammad Ridwan**\\n📱 +62-813-3333-4444\\n⏰ Standby Darurat\\n\\n🆘 **Tim Takmir:**\\n📱 +62-812-3456-7890\\n\\n⏱️ **Response Time:** < 10 menit\\n📍 **Lokasi:** ${data.location ? 'GPS Diterima' : 'Mohon share lokasi'}\\n\\n🤲 Innalillahi wa inna ilaihi raji'un\\nSemoga Allah mudahkan urusan Anda`,\n    priority: 'CRITICAL',\n    notifyAdmin: true\n  },\n  \n  layanan_jenazah: {\n    response: `🕊️ *LAYANAN JENAZAH MASJID AL-IKHLAS*\\n\\nInnalillahi wa inna ilaihi raji'un\\n\\n📋 **Tim Jenazah 24/7:**\\n\\n🔹 **Koordinator Jenazah**\\n👤 H. Bambang Sutrisno\\n📱 +62-815-1234-5678\\n\\n🔹 **Tim Pemandian**\\n👤 Ibu Siti Aminah\\n📱 +62-816-2345-6789\\n\\n🔹 **Tim Kafan & Perlengkapan**\\n👤 Bpk. Ahmad Fauzi\\n📱 +62-817-3456-7890\\n\\n📦 **Layanan Tersedia:**\\n✅ Pemandian jenazah\\n✅ Kafan lengkap\\n✅ Ambulans\\n✅ Prosesi pemakaman\\n✅ Tahlilan 3,7,40,100 hari\\n\\n💰 **Donasi Sukarela**\\nBCA: 1234567890\\na.n Masjid Al-Ikhlas\\n\\n🤲 Semoga amal ibadah almarhum/almarhumah diterima Allah SWT`,\n    priority: 'HIGH',\n    notifyAdmin: true\n  },\n  \n  admin_masjid: {\n    response: `📞 *KONTAK PENGURUS MASJID*\\n\\n👥 **SUSUNAN TAKMIR MASJID AL-IKHLAS**\\n\\n🏛️ **Ketua Takmir**\\n👤 H. Muhammad Hasan, SE\\n📱 +62-812-1111-1111\\n📧 ketua@masjidalukhlas.id\\n\\n💰 **Bendahara**\\n👤 Hj. Fatimah Ahmad, S.Ak\\n📱 +62-813-2222-2222\\n📧 bendahara@masjidalukhlas.id\\n\\n📝 **Sekretaris**\\n👤 Ahmad Fauzan, S.Kom\\n📱 +62-814-3333-3333\\n📧 sekretaris@masjidalukhlas.id\\n\\n🏗️ **Sie. Pembangunan**\\n👤 Ir. Bambang Sutrisno\\n📱 +62-815-4444-4444\\n\\n📚 **Sie. Pendidikan**\\n👤 Dra. Siti Khadijah\\n📱 +62-816-5555-5555\\n\\n🤝 **Sie. Sosial**\\n👤 H. Abdullah Rahman\\n📱 +62-817-6666-6666\\n\\n📍 **Alamat Kantor:**\\nJl. Raya Masjid No. 123\\nJakarta Selatan 12345\\n\\n🕐 **Jam Operasional:**\\nSenin-Jumat: 08:00-16:00\\nSabtu-Minggu: 08:00-12:00\\n\\n📧 **Email Resmi:**\\ninfo@masjidalukhlas.id\\n\\n🌐 **Website:**\\nhttps://masjidalukhlas.id`,\n    priority: 'MEDIUM',\n    notifyAdmin: false\n  }\n};\n\nconst template = emergencyResponses[data.intent];\nif (!template) {\n  return [{\n    json: {\n      ...data,\n      response: '❌ Template emergency tidak ditemukan',\n      hasError: true\n    }\n  }];\n}\n\n// Add user context to response\nlet response = template.response;\nif (userContext.name) {\n  response = `السلام عليكم ${userContext.name}\\n\\n` + response;\n}\n\n// Add emergency signature\nresponse += `\\n\\n⚡ **EMERGENCY RESPONSE SYSTEM**\\n📱 Powered by Masjid AI Enterprise\\n🕐 ${moment().format('DD/MM/YYYY HH:mm:ss')} WIB\\n\\n🚨 Untuk emergency yang mengancam nyawa:\\n🚑 Call 118/119\\n👮 Call 110`;\n\nreturn [{\n  json: {\n    ...data,\n    response: response,\n    priority: template.priority,\n    notifyAdmin: template.notifyAdmin,\n    responseType: 'EMERGENCY',\n    hasError: false,\n    processingNode: 'Human Escalation Handler'\n  }\n}];"
      },
      "id": "7",
      "name": "🚨 Human Escalation",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1450, 200]
    },
    {
      "parameters": {
        "functionCode": "// 🤖 ADVANCED AI PROCESSOR WITH MULTIPLE MODELS\nconst data = $input.all()[0].json;\nconst userContext = $node['User Context Loader'].json[0] || {};\n\n// AI Model Selection Strategy\nfunction selectAIModel(intent, messageType, userLevel) {\n  const modelStrategy = {\n    ai_chat_islamic: {\n      primary: data.config.ai_models.primary,\n      fallback: data.config.ai_models.fallback,\n      maxTokens: userLevel === 'premium' ? 2000 : 1000\n    },\n    voice_command: {\n      primary: data.config.ai_models.primary,\n      fallback: data.config.ai_models.fallback,\n      maxTokens: 1500\n    },\n    image_analysis: {\n      primary: data.config.ai_models.vision,\n      fallback: data.config.ai_models.primary,\n      maxTokens: 1200\n    }\n  };\n  \n  return modelStrategy[intent] || modelStrategy.ai_chat_islamic;\n}\n\n// Enhanced System Prompt with Context\nfunction buildSystemPrompt(userContext, intent) {\n  const basePrompt = `Anda adalah AI Assistant Enterprise untuk Masjid Al-Ikhlas, sistem cerdas berbasis teknologi Islamic AI terdepan. \n\nKARAKTER & KEPRIBADIAN:\n- Berpengetahuan luas tentang Islam (Al-Quran, Hadits, Fiqh, Sejarah)\n- Bijaksana, sabar, dan penuh empati\n- Menggunakan bahasa Indonesia yang santun dan mudah dipahami\n- Selalu menyertakan dalil yang valid untuk jawaban agama\n- Tidak memberikan fatwa untuk masalah fiqh kompleks (rujuk ke ustadz)\n\nKONTEKS MASJID:\n🕌 Nama: Masjid Al-Ikhlas Jakarta Selatan\n📍 Lokasi: Jl. Raya Masjid No. 123, Jakarta Selatan\n👥 Jamaah: 2000+ aktif\n📚 Program: Kajian, TPQ, Tahfidz, Sosial\n\nUSTADZ TERSEDIA:\n👨‍🏫 Ustadz Ahmad Dahlan (Fiqh, Akhlaq, Tafsir)\n⏰ Senin-Kamis 19:00-21:00 | 📱 +62-813-1111-2222\n\n👨‍🏫 Ustadz Muhammad Ridwan (Muamalah, Ekonomi Islam)\n⏰ Selasa-Jumat 08:00-12:00 | 📱 +62-813-3333-4444\n\nPROGRAM UNGGULAN:\n📖 Kajian Kitab Kuning (Ahad 06:00)\n🎓 Tahfidz Quran (Senin-Kamis 16:00)\n👶 TPQ Anak (Selasa-Jumat 15:00)\n🤝 Bantuan Sosial (24/7)\n💒 Layanan Nikah (by appointment)\n🕊️ Layanan Jenazah (24/7)\n\nGUIDELINES RESPONSE:\n✅ Gunakan emoji yang relevan\n✅ Struktur jawaban yang rapi\n✅ Sertakan ayat/hadits jika ada\n✅ Rujuk ke ustadz untuk masalah kompleks\n✅ Berikan opsi follow-up\n❌ Jangan berfatwa tanpa dasar kuat\n❌ Jangan bahas politik/SARA\n❌ Jangan berlebihan dalam klaim`;\n\n  // Add user context if available\n  if (userContext.name) {\n    return basePrompt + `\\n\\nUSER CONTEXT:\\n👤 Nama: ${userContext.name}\\n📱 Member since: ${userContext.created_at}\\n🎯 Preferensi: ${userContext.preferences || 'Umum'}`;\n  }\n  \n  return basePrompt;\n}\n\n// AI Response Generator with Multiple Models\nasync function generateAIResponse(message, intent, userContext) {\n  const modelConfig = selectAIModel(intent, data.messageType, userContext.level || 'basic');\n  const systemPrompt = buildSystemPrompt(userContext, intent);\n  \n  try {\n    // Primary AI Model Request\n    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${data.config.apis.openrouter}`,\n        'Content-Type': 'application/json',\n        'HTTP-Referer': 'https://masjidalukhlas.id',\n        'X-Title': 'Masjid Al-Ikhlas Enterprise AI'\n      },\n      body: JSON.stringify({\n        model: modelConfig.primary,\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: message }\n        ],\n        max_tokens: modelConfig.maxTokens,\n        temperature: 0.7,\n        top_p: 0.9,\n        frequency_penalty: 0.1,\n        presence_penalty: 0.1\n      })\n    });\n    \n    if (response.ok) {\n      const data = await response.json();\n      let aiResponse = data.choices[0].message.content;\n      \n      // Post-processing\n      if (!aiResponse.includes('🤲') && !aiResponse.includes('السلام')) {\n        aiResponse = '🤲 ' + aiResponse;\n      }\n      \n      // Add interactive suggestions\n      aiResponse += `\\n\\n💡 **Pertanyaan Lanjutan:**\\n${data.suggestions.map(s => `• ${s}`).join('\\n')}\\n\\n📞 Butuh konsultasi langsung? Ketik \"tanya ustadz\"`;\n      \n      return {\n        response: aiResponse,\n        model: modelConfig.primary,\n        tokens: data.usage?.total_tokens || 0,\n        status: 'success'\n      };\n    } else {\n      throw new Error(`API Error: ${response.status}`);\n    }\n  } catch (error) {\n    // Fallback to secondary model\n    try {\n      const fallbackResponse = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${data.config.apis.openrouter}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: modelConfig.fallback,\n          messages: [\n            { role: 'system', content: systemPrompt },\n            { role: 'user', content: message }\n          ],\n          max_tokens: 800,\n          temperature: 0.8\n        })\n      });\n      \n      if (fallbackResponse.ok) {\n        const fallbackData = await fallbackResponse.json();\n        return {\n          response: '🤲 ' + fallbackData.choices[0].message.content,\n          model: modelConfig.fallback,\n          tokens: fallbackData.usage?.total_tokens || 0,\n          status: 'fallback'\n        };\n      }\n    } catch (fallbackError) {\n      // Ultimate fallback\n      return {\n        response: `🤖 Maaf, sistem AI sedang mengalami gangguan teknis. \\n\\n📞 Untuk bantuan segera:\\n👨‍🏫 Ustadz Ahmad: +62-813-1111-2222\\n👨‍🏫 Ustadz Ridwan: +62-813-3333-4444\\n📱 Admin: +62-812-3456-7890\\n\\n🔄 Silakan coba lagi dalam beberapa menit.`,\n        model: 'fallback',\n        tokens: 0,\n        status: 'error'\n      };\n    }\n  }\n}\n\n// Media Processing (Image/Voice)\nasync function processMedia(mediaUrl, messageType) {\n  if (messageType === 'image') {\n    return {\n      response: `📸 *Analisis Gambar*\\n\\n🔍 Gambar Anda telah diterima dan sedang dianalisis...\\n\\n📋 **Yang dapat saya bantu:**\\n• Membaca teks Arab dalam gambar\\n• Mengidentifikasi kaligrafi/hiasan Islam\\n• Menjelaskan konten islami dalam foto\\n• Verifikasi dalil/hadits dalam gambar\\n\\n⚠️ **Catatan:** Untuk analisis mendalam, mohon kirim ulang dengan caption yang jelas.\\n\\n🤖 Powered by Islamic Vision AI`,\n      mediaProcessed: true\n    };\n  } else if (messageType === 'audio') {\n    return {\n      response: `🎤 *Pesan Suara Diterima*\\n\\n🔊 Audio Anda sedang dikonversi ke teks...\\n\\n📝 **Layanan Voice:**\\n• Konversi suara ke teks\\n• Analisis pertanyaan dari audio\\n• Response dalam bentuk teks\\n• Dukungan bahasa Indonesia & Arab\\n\\n⏳ Estimasi: 30-60 detik\\n\\n🎧 Untuk kualitas terbaik, gunakan audio yang jelas`,\n      mediaProcessed: true\n    };\n  }\n  \n  return { response: '', mediaProcessed: false };\n}\n\n// Main AI Processing Logic\nlet result;\n\nif (data.mediaUrl && ['image', 'audio', 'video'].includes(data.messageType)) {\n  result = await processMedia(data.mediaUrl, data.messageType);\n} else {\n  result = await generateAIResponse(data.message, data.intent, userContext);\n}\n\n// Add enterprise signature\nresult.response += `\\n\\n━━━━━━━━━━━━━━━━━━━━━\\n🕌 Masjid Al-Ikhlas Enterprise\\n🤖 Islamic AI Assistant v4.0\\n⚡ Powered by Multi-Model AI\\n🔮 Serving with ❤️ 24/7`;\n\nreturn [{\n  json: {\n    ...data,\n    response: result.response,\n    aiModel: result.model,\n    aiTokens: result.tokens,\n    aiStatus: result.status,\n    mediaProcessed: result.mediaProcessed || false,\n    responseType: 'AI_GENERATED',\n    hasError: false,\n    processingNode: 'Advanced AI Processor'\n  }\n}];"
      },
      "id": "8",
      "name": "🤖 Advanced AI Engine",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1450, 400]
    },
    {
      "parameters": {
        "functionCode": "// 📋 STANDARD SERVICE HANDLER WITH ENTERPRISE FEATURES\nconst data = $input.all()[0].json;\nconst userContext = $node['User Context Loader'].json[0] || {};\nconst moment = require('moment');\n\n// Enhanced Service Templates with Personalization\nconst serviceTemplates = {\n  jadwal_shalat: () => {\n    const now = moment();\n    const times = {\n      fajr: '04:30', dhuhr: '12:15', asr: '15:30', \n      maghrib: '18:45', isha: '20:00'\n    };\n    \n    // Dynamic next prayer calculation\n    const currentHour = now.hour();\n    let nextPrayer = 'Subuh';\n    if (currentHour >= 4 && currentHour < 12) nextPrayer = 'Dzuhur';\n    else if (currentHour >= 12 && currentHour < 15) nextPrayer = 'Ashar';\n    else if (currentHour >= 15 && currentHour < 18) nextPrayer = 'Magrib';\n    else if (currentHour >= 18 && currentHour < 20) nextPrayer = 'Isya';\n    \n    return `🕌 *JADWAL SHALAT HARI INI*\\n📅 ${now.format('dddd, DD MMMM YYYY')}\\n📍 Masjid Al-Ikhlas Jakarta Selatan\\n\\n🌅 **Subuh:** ${times.fajr} WIB\\n☀️ **Dzuhur:** ${times.dhuhr} WIB\\n🌤️ **Ashar:** ${times.asr} WIB\\n🌅 **Magrib:** ${times.maghrib} WIB\\n🌙 **Isya:** ${times.isha} WIB\\n\\n⏰ **Shalat Selanjutnya:** ${nextPrayer}\\n🔔 **Reminder:** Ketik \"reminder on\" untuk notifikasi\\n\\n🕋 **Info Kiblat:** 294° dari Utara\\n📱 **Download App:** bit.ly/ShalatMasjidApp\\n\\n🤲 *Aqiimu ash-shalata li dhikrii*\\n*\"Dirikanlah shalat untuk mengingat-Ku\"* (QS. Thaha: 14)`;\n  },\n  \n  kajian_ustadz: () => {\n    return `📚 *JADWAL KAJIAN & PENDIDIKAN ISLAM*\\n📍 Masjid Al-Ikhlas\\n\\n📖 **KAJIAN RUTIN MINGGUAN**\\n\\n🟢 **SENIN - Kajian Kitab Kuning**\\n🕕 06:00-07:30 WIB\\n👨‍🏫 Ustadz Ahmad Dahlan\\n📚 Kitab: Riyadhus Shalihin\\n📍 Aula Utama\\n👥 Umum (Free)\\n\\n🔵 **RABU - Fiqh Muamalah**\\n🕘 20:00-21:30 WIB\\n👨‍🏫 Ustadz Muhammad Ridwan\\n📚 Ekonomi Islam Kontemporer\\n📍 Ruang Kajian\\n👥 Umum (Free)\\n\\n🟡 **JUMAT - Kultum & Tanya Jawab**\\n🕐 13:30-14:30 WIB\\n👨‍🏫 Ustadz Tamu Mingguan\\n📚 Tema Aktual\\n📍 Aula Utama\\n👥 Khusus Pria\\n\\n🟣 **AHAD - Kajian Keluarga**\\n🕘 09:00-11:00 WIB\\n👨‍🏫 Ustadz Ahmad & Ustadzah Aisyah\\n📚 Fiqh Keluarga & Parenting Islami\\n📍 Aula Utama\\n👥 Keluarga (Free)\\n\\n📋 **PENDAFTARAN KAJIAN KHUSUS**\\n\\n🎓 **Tahfidz Al-Quran**\\n📅 Senin-Kamis 16:00-18:00\\n👥 Dewasa & Anak\\n💰 Rp 200.000/bulan\\n\\n📖 **TPQ (Taman Pendidikan Quran)**\\n📅 Selasa-Jumat 15:00-17:00\\n👥 Anak usia 4-12 tahun\\n💰 Rp 150.000/bulan\\n\\n🏛️ **Kelas Bahasa Arab**\\n📅 Sabtu 08:00-10:00\\n👥 Remaja & Dewasa\\n💰 Rp 300.000/bulan\\n\\n📞 **Pendaftaran & Info:**\\n📱 Admin: +62-812-3456-7890\\n📧 pendidikan@masjidalukhlas.id\\n💬 WhatsApp: bit.ly/DaftarKajian\\n\\n🎯 **Target Pembelajaran:**\\n✅ Pemahaman Islam Kaffah\\n✅ Hafalan Al-Quran\\n✅ Kemampuan Baca Arab\\n✅ Aplikasi Islam Modern\\n\\n🏆 **Prestasi Alumni:**\\n📜 50+ Hafidz/Hafidzah\\n🎓 100+ Melanjutkan ke Pesantren\\n🏅 Juara MTQ tingkat Jakarta`;\n  },\n  \n  donasi_zakat: () => {\n    return `💰 *DONASI & ZAKAT MASJID AL-IKHLAS*\\n\\n🏦 **REKENING DONASI RESMI**\\n\\n💳 **Bank BCA**\\n🔢 1234-567-890\\n👤 a.n. Masjid Al-Ikhlas\\n\\n💳 **Bank Mandiri**\\n🔢 0987-6543-21\\n👤 a.n. Yayasan Masjid Al-Ikhlas\\n\\n💳 **Bank BRI**\\n🔢 5555-6666-7777-8888\\n👤 a.n. Takmir Masjid Al-Ikhlas\\n\\n📱 **E-WALLET & DIGITAL**\\n\\n💰 **DANA:** 081234567890\\n💰 **GoPay:** 081234567890\\n💰 **OVO:** 081234567890\\n💰 **ShopeePay:** 081234567890\\n\\n📱 **QRIS Code:**\\n🔗 bit.ly/QRISMasjidAlIkhlas\\n\\n💎 **KATEGORI DONASI**\\n\\n🕌 **Operasional Masjid**\\n• Listrik & air\\n• Kebersihan & maintenance\\n• Gaji karyawan\\n• Target: Rp 50jt/bulan\\n\\n📚 **Pendidikan Islam**\\n• Gaji ustadz/ustadzah\\n• Buku & materi pembelajaran\\n• Fasilitas kelas\\n• Target: Rp 30jt/bulan\\n\\n🤝 **Program Sosial**\\n• Bantuan fakir miskin\\n• Santunan anak yatim\\n• Beasiswa pendidikan\\n• Target: Rp 25jt/bulan\\n\\n🏗️ **Pembangunan & Renovasi**\\n• Perluasan bangunan\\n• Perbaikan fasilitas\\n• Penambahan sarana\\n• Target: Rp 100jt/tahun\\n\\n📊 **KALKULATOR ZAKAT**\\n\\n💰 **Zakat Mal (2.5%)**\\n• Emas/perak: 85gr+ emas\\n• Uang tunai: Rp 81.000.000+\\n• Investasi: saham, reksadana\\n\\n🌾 **Zakat Profesi (2.5%)**\\n• Gaji bulanan: Rp 7.000.000+\\n• Bonus & tunjangan\\n• Honorarium & fee\\n\\n📋 **LAPORAN TRANSPARAN**\\n\\n📊 **Dashboard Real-time:**\\n🔗 transparansi.masjidalukhlas.id\\n\\n📱 **Update Mingguan:**\\nWhatsApp broadcast setiap Jumat\\n\\n📧 **Laporan Bulanan:**\\nEmail newsletter + website\\n\\n🏆 **ACHIEVEMENT 2024**\\n✅ Renovasi mushalla wanita\\n✅ Bantuan 200 keluarga dhuafa\\n✅ Beasiswa 50 anak yatim\\n✅ Pembangunan perpustakaan\\n\\n📞 **KONFIRMASI DONASI**\\n📱 +62-812-3456-7890 (Admin)\\n📧 donasi@masjidalukhlas.id\\n💬 WhatsApp konfirmasi otomatis\\n\\n🤲 *Jazakumullahu khairan kathiran*\\n*Semoga Allah membalas kebaikan Anda*`;\n  },\n  \n  informasi_umum: () => {\n    return `🕌 *MASJID AL-IKHLAS JAKARTA SELATAN*\\n*Pusat Ibadah & Dakwah Umat*\\n\\n📍 **ALAMAT LENGKAP**\\nJl. Raya Masjid No. 123\\nKelurahan Kebayoran Baru\\nKecamatan Kebayoran Baru\\nJakarta Selatan 12345\\nDKI Jakarta, Indonesia\\n\\n🗺️ **LOKASI & AKSES**\\n• 📍 GPS: -6.2088, 106.8456\\n• 🚇 Stasiun MRT Senayan (1.2 km)\\n• 🚌 Halte Busway Senayan (800m)\\n• 🛣️ Dekat Jalan Sudirman\\n• 🏢 Komplek Perkantoran Senayan\\n\\n📞 **KONTAK RESMI**\\n📱 WhatsApp: +62-812-3456-7890\\n☎️ Telepon: (021) 1234-5678\\n📠 Fax: (021) 1234-5679\\n📧 Email: info@masjidalukhlas.id\\n🌐 Website: masjidalukhlas.id\\n📘 Facebook: Masjid Al-Ikhlas\\n📸 Instagram: @masjidalukhlas\\n🐦 Twitter: @masjidalukhlas\\n📺 YouTube: Masjid Al-Ikhlas TV\\n\\n🕐 **JAM OPERASIONAL**\\n\\n🌅 **Subuh:** 04:00-06:00 WIB\\n☀️ **Pagi:** 06:00-11:30 WIB\\n🌞 **Dzuhur:** 11:30-13:30 WIB\\n🌤️ **Sore:** 13:30-18:00 WIB\\n🌅 **Magrib:** 18:00-19:30 WIB\\n🌙 **Malam:** 19:30-22:00 WIB\\n\\n🏢 **FASILITAS TERSEDIA**\\n\\n🕌 **Masjid Utama**\\n• Kapasitas: 2000 jamaah\\n• AC central + kipas angin\\n• Sound system digital\\n• Karpet premium\\n• Mihrab marmer\\n\\n🚿 **Tempat Wudhu**\\n• Pria: 40 kran wudhu\\n• Wanita: 35 kran wudhu\\n• Air dingin & hangat\\n• Sabun & tissue tersedia\\n\\n🚻 **Toilet Modern**\\n• 15 toilet pria\\n• 12 toilet wanita\\n• Fasilitas difabel\\n• Baby changing room\\n\\n🅿️ **Area Parkir**\\n• Motor: 500 unit\\n• Mobil: 200 unit\\n• Security 24/7\\n• CCTV monitoring\\n\\n📚 **Perpustakaan Islam**\\n• 5000+ koleksi buku\\n• Mushaf Al-Quran 30 juz\\n• Kitab hadits lengkap\\n• Buku anak-anak\\n• WiFi gratis\\n\\n🏫 **Ruang Pendidikan**\\n• 8 ruang kelas ber-AC\\n• Proyektor & sound system\\n• Papan tulis interaktif\\n• Kapasitas 40 orang/ruang\\n\\n🍽️ **Dapur & Aula**\\n• Dapur modern lengkap\\n• Aula serbaguna 500 orang\\n• Peralatan catering\\n• Stage & lighting\\n\\n🏥 **Klinik Kesehatan**\\n• Dokter umum (Senin-Jumat)\\n• Bekam & thibbun nabawi\\n• Konseling keluarga\\n• Apotek mini\\n\\n👥 **STRUKTUR ORGANISASI**\\n\\n🏛️ **Dewan Pembina**\\nKH. Abdullah Rahman (Ketua)\\nDr. H. Muhammad Hasan (Anggota)\\nHj. Fatimah Ahmad (Anggota)\\n\\n👨‍💼 **Pengurus Harian**\\nKetua: H. Bambang Sutrisno\\nSekretaris: Ahmad Fauzan, S.Kom\\nBendahara: Hj. Siti Khadijah\\n\\n📊 **STATISTIK MASJID**\\n\\n👥 **Jamaah Tetap:** 2000+ orang\\n📅 **Berdiri:** 15 Maret 1985\\n🎓 **Alumni TPQ:** 5000+ anak\\n💰 **Aset:** Rp 25 Miliar\\n🏆 **Penghargaan:** 15 tingkat nasional\\n\\n🎯 **VISI & MISI**\\n\\n🎯 **VISI:**\\n*Menjadi pusat ibadah dan dakwah yang unggul dalam membentuk generasi Qur'ani dan berakhlak mulia*\\n\\n📋 **MISI:**\\n1. Menyelenggarakan ibadah yang khusyuk\\n2. Memberikan pendidikan Islam berkualitas\\n3. Memberdayakan ekonomi umat\\n4. Melayani kebutuhan sosial masyarakat\\n5. Menjaga dan melestarikan nilai Islam\\n\\n🔄 **PROGRAM UNGGULAN**\\n• 📖 Tahfidz Al-Quran 30 Juz\\n• 🎓 Beasiswa Anak Yatim\\n• 🏥 Layanan Kesehatan Gratis\\n• 💰 UMKM Coaching\\n• 🌱 Urban Farming Masjid`;\n  },\n  \n  program_sosial: () => {\n    return `🤝 *PROGRAM SOSIAL MASJID AL-IKHLAS*\\n*Berbagi Kebaikan untuk Sesama*\\n\\n🎯 **PROGRAM RUTIN BULANAN**\\n\\n👶 **SANTUNAN ANAK YATIM**\\n📅 Setiap tanggal 10\\n👥 250 anak yatim piatu\\n💰 Rp 500.000/anak/bulan\\n📚 Plus bantuan sekolah\\n📍 Wilayah Jakarta Selatan\\n\\n👵 **BANTUAN LANSIA DHUAFA**\\n📅 Setiap tanggal 15\\n👥 150 lansia terlantar\\n💰 Rp 300.000/orang/bulan\\n🏥 Plus pemeriksaan kesehatan\\n📍 5 kelurahan sekitar\\n\\n🍽️ **DAPUR UMUM**\\n📅 Senin, Rabu, Jumat\\n🕐 11:00-13:00 WIB\\n👥 300 porsi/hari\\n🍛 Nasi kotak + lauk lengkap\\n📍 Halaman masjid\\n\\n🎓 **BEASISWA PENDIDIKAN**\\n\\n📚 **Beasiswa SD/MI**\\n👥 100 siswa aktif\\n💰 Rp 2.000.000/tahun\\n📋 Syarat: Yatim piatu + berprestasi\\n\\n📚 **Beasiswa SMP/MTs**\\n👥 75 siswa aktif\\n💰 Rp 3.000.000/tahun\\n📋 Syarat: Keluarga tidak mampu\\n\\n📚 **Beasiswa SMA/MA**\\n👥 50 siswa aktif\\n💰 Rp 4.000.000/tahun\\n📋 Syarat: Ranking 10 besar\\n\\n📚 **Beasiswa Kuliah**\\n👥 25 mahasiswa aktif\\n💰 Rp 10.000.000/tahun\\n📋 Syarat: IPK min 3.5\\n\\n🏥 **LAYANAN KESEHATAN GRATIS**\\n\\n👩‍⚕️ **Klinik Umum**\\n📅 Senin-Jumat 08:00-15:00\\n👥 50 pasien/hari\\n💊 Obat gratis\\n🩺 Pemeriksaan lengkap\\n\\n🩸 **Donor Darah Rutin**\\n📅 Setiap tanggal 17\\n🎯 Target: 200 kantong\\n🏥 Kerjasama PMI Jakarta\\n🎁 Doorprize menarik\\n\\n👁️ **Pemeriksaan Mata Gratis**\\n📅 Triwulan (Maret, Juni, Sept, Des)\\n👓 Kacamata gratis untuk yang butuh\\n👥 200 orang/event\\n\\n🦷 **Pengobatan Gigi Gratis**\\n📅 Setiap tanggal 25\\n👩‍⚕️ drg. Siti Aisyah\\n🦷 Cabut, tambal, scalling\\n👥 30 pasien/hari\\n\\n💼 **PEMBERDAYAAN EKONOMI**\\n\\n🛍️ **Bazar UMKM Mingguan**\\n📅 Setiap Minggu 06:00-10:00\\n🏪 50 stand pedagang\\n📍 Halaman parkir masjid\\n💰 Sewa stand: Rp 50.000\\n\\n🎓 **Pelatihan Kewirausahaan**\\n📅 Setiap bulan\\n👥 30 peserta/batch\\n💰 Modal usaha: Rp 2.000.000\\n📋 Pendampingan 6 bulan\\n\\n💳 **Koperasi Syariah**\\n💰 Simpan pinjam tanpa bunga\\n📈 Bagi hasil sesuai syariat\\n👥 500+ anggota aktif\\n🏪 Toko kelontong murah\\n\\n⚡ **PROGRAM DARURAT**\\n\\n🌊 **Tim Tanggap Bencana**\\n📱 Siaga 24/7\\n🚛 Mobil logistik siap\\n🎒 Emergency kit lengkap\\n👥 20 relawan terlatih\\n\\n🏥 **Ambulans Gratis**\\n📱 Call: 0812-AMBULANS\\n🚑 2 unit siap 24/7\\n👨‍⚕️ Paramedis berpengalaman\\n💰 Gratis untuk jamaah\\n\\n🍞 **Dapur Darurat**\\n📦 Stock beras 10 ton\\n🥫 Makanan kaleng siap saji\\n💧 Air mineral 5000 botol\\n⏱️ Distribusi < 2 jam\\n\\n📋 **CARA MENDAFTAR BANTUAN**\\n\\n📝 **Persyaratan Umum:**\\n• KTP Jakarta Selatan\\n• Surat keterangan tidak mampu\\n• Foto rumah tampak depan\\n• Rekening bank (jika ada)\\n\\n📞 **Kontak Pendaftaran:**\\n👤 Ibu Fatimah (Sie. Sosial)\\n📱 +62-816-5555-5555\\n📧 sosial@masjidalukhlas.id\\n🕐 Senin-Jumat 08:00-15:00\\n\\n📍 **Alamat Kantor:**\\nGedung Takmir Lt.2\\nJl. Raya Masjid No. 123\\nJakarta Selatan\\n\\n💡 **CARA MENJADI DONATUR**\\n\\n💰 **Donasi Rutin:**\\n🔢 BCA: 1234-567-890\\n💳 Auto debit bulanan\\n📊 Laporan penggunaan\\n\\n🎁 **Donasi Insidental:**\\n📱 QRIS scan\\n💰 Transfer manual\\n📧 E-receipt otomatis\\n\\n🤝 **VOLUNTEER PROGRAM**\\n\\n👥 **Relawan Tetap:**\\n📅 Komitmen min 6 bulan\\n⏰ 10 jam/minggu\\n🎓 Training lengkap\\n🏆 Sertifikat apresiasi\\n\\n👥 **Relawan Event:**\\n📅 Saat ada program khusus\\n⏰ Fleksibel\\n🍽️ Konsumsi + transport\\n📸 Dokumentasi kegiatan\\n\\n🏆 **PENGHARGAAN & SERTIFIKASI**\\n\\n🥇 **Masjid Terbaik DKI Jakarta 2023**\\n🏆 **Program Sosial Terpadu 2022**\\n⭐ **ISO 9001:2015 Management**\\n📜 **Akreditasi A - Kemenag RI**\\n\\n📊 **LAPORAN TRANSPARANSI**\\n\\n💰 **Total Bantuan 2024:**\\nRp 15.2 Miliar tersalurkan\\n\\n👥 **Penerima Manfaat:**\\n• 2,500 keluarga dhuafa\\n• 500 anak yatim piatu\\n• 300 lansia terlantar\\n• 1,200 siswa beasiswa\\n\\n🌐 **Dashboard Online:**\\nlaporansosial.masjidalukhlas.id`;\n  },\n  \n  konsultasi_syariah: () => {\n    return `🤲 *KONSULTASI SYARIAH & BIMBINGAN ROHANI*\\n📍 Masjid Al-Ikhlas\\n\\n👨‍🏫 **TIM USTADZ KONSULTAN**\\n\\n🟢 **Ustadz Dr. Ahmad Dahlan, Lc., M.A**\\n📚 Spesialisasi:\\n• Fiqh Ibadah & Muamalah\\n• Akhlaq & Tasawuf\\n• Tafsir Al-Quran\\n• Resolusi Konflik Keluarga\\n\\n⏰ **Jadwal Konsultasi:**\\nSenin-Kamis: 19:00-21:00 WIB\\nJumat: 08:00-11:00 WIB\\nSabtu: 14:00-17:00 WIB\\n\\n📱 **Kontak Langsung:**\\n+62-813-1111-2222\\nconsult.ahmad@masjidalukhlas.id\\n\\n🔵 **Ustadz Muhammad Ridwan, S.H.I., M.E.I**\\n📚 Spesialisasi:\\n• Ekonomi & Keuangan Syariah\\n• Hukum Keluarga Islam\\n• Parenting Islami\\n• Entrepreneurship Halal\\n\\n⏰ **Jadwal Konsultasi:**\\nSelasa-Jumat: 08:00-12:00 WIB\\nSabtu: 19:00-21:00 WIB\\nMinggu: 09:00-11:00 WIB\\n\\n📱 **Kontak Langsung:**\\n+62-813-3333-4444\\nconsult.ridwan@masjidalukhlas.id\\n\\n🟡 **Ustadzah Dr. Aisyah Mahmud, Lc., M.Pd**\\n📚 Spesialisasi:\\n• Konsultasi Wanita & Keluarga\\n• Pendidikan Anak Islami\\n• Kesehatan Reproduksi Syariah\\n• Psikologi Islam\\n\\n⏰ **Jadwal Konsultasi:**\\nRabu-Jumat: 14:00-17:00 WIB\\nSabtu: 09:00-12:00 WIB\\nKhusus wanita & pasangan suami istri\\n\\n📱 **Kontak Langsung:**\\n+62-814-4444-5555\\nconsult.aisyah@masjidalukhlas.id\\n\\n📋 **KATEGORI KONSULTASI**\\n\\n💒 **PERNIKAHAN & KELUARGA**\\n• Persiapan pernikahan\\n• Konflik rumah tangga\\n• Perceraian & rujuk\\n• Hak & kewajiban suami istri\\n• Poligami & iddah\\n• Nafkah & warisan\\n\\n👶 **PARENTING ISLAMI**\\n• Pendidikan anak sejak dini\\n• Mengatasi anak bandel\\n• Pendidikan seks islami\\n• Gadget & media sosial\\n• Bullying & pergaulan\\n• Memilih sekolah\\n\\n💰 **EKONOMI & KEUANGAN**\\n• Investasi halal vs haram\\n• Asuransi syariah\\n• Kredit & hutang piutang\\n• Zakat profesi & bisnis\\n• MLM & bisnis online\\n• Cryptocurrency\\n\\n🏢 **PEKERJAAN & KARIR**\\n• Bekerja di bank konvensional\\n• Profesi yang diragukan\\n• Suap & gratifikasi\\n• Resign vs bertahan\\n• Bisnis franchise\\n• Kerjasama non-muslim\\n\\n🩺 **KESEHATAN & MEDIS**\\n• Transplantasi organ\\n• Donor darah & ASI\\n• Kontrasepsi & KB\\n• Aborsi darurat\\n• Operasi plastik\\n• Vaksin & obat-obatan\\n\\n🎓 **PENDIDIKAN & SOSIAL**\\n• Sekolah campuran\\n• Beasiswa dari non-muslim\\n• Organisasi kemasyarakatan\\n• Politik & demokrasi\\n• Toleransi beragama\\n• Media & hiburan\\n\\n📱 **METODE KONSULTASI**\\n\\n🏢 **Tatap Muka**\\n📍 Ruang Konsultasi Masjid\\n⏰ Sesuai jadwal ustadz\\n💰 Gratis (donasi sukarela)\\n📝 Booking: +62-812-3456-7890\\n\\n📞 **Telepon/WhatsApp**\\n⏰ 24/7 (emergency)\\n💰 Gratis\\n📱 Langsung ke nomor ustadz\\n⚡ Response < 2 jam\\n\\n💻 **Video Call**\\n📱 Zoom/Google Meet\\n⏰ Sesuai appointment\\n💰 Gratis\\n🔗 Link dikirim via WA\\n\\n📧 **Email/Chat**\\n📧 Kirim ke email ustadz\\n💬 WhatsApp konsultasi\\n⏰ Response 6-24 jam\\n💰 Gratis\\n\\n🚨 **EMERGENCY CONSULTATION**\\n\\n⚡ **Hotline 24/7:**\\n📱 +62-800-SYARIAH-24\\n🎯 Untuk masalah mendesak\\n👨‍🏫 Ustadz jaga malam\\n\\n🔴 **Kategori Emergency:**\\n• Kematian & jenazah\\n• Krisis keluarga akut\\n• Dilema hukum mendesak\\n• Kecelakaan & musibah\\n• Ancaman perceraian\\n\\n📋 **PROSEDUR KONSULTASI**\\n\\n1️⃣ **Pendaftaran**\\n• Isi form biodata\\n• Pilih ustadz & jadwal\\n• Jelaskan masalah singkat\\n\\n2️⃣ **Konfirmasi**\\n• Terima SMS/WA konfirmasi\\n• Siapkan dokumen (jika ada)\\n• Datang 15 menit sebelum\\n\\n3️⃣ **Konsultasi**\\n• Durasi: 30-60 menit\\n• Diskusi terbuka\\n• Dapatkan solusi syar'i\\n\\n4️⃣ **Follow Up**\\n• Evaluasi hasil\\n• Konsultasi lanjutan (jika perlu)\\n• Laporan perkembangan\\n\\n💡 **TIPS KONSULTASI EFEKTIF**\\n\\n✅ **DO:**\\n• Siapkan pertanyaan spesifik\\n• Bawa dokumen pendukung\\n• Jujur & terbuka\\n• Catat jawaban ustadz\\n• Tanyakan dalil Al-Quran/Hadits\\n\\n❌ **DON'T:**\\n• Tanya hal yang sudah jelas\\n• Berbohong atau menyembunyikan fakta\\n• Memaksa jawaban sesuai keinginan\\n• Konsultasi hal yang tidak penting\\n• Membandingkan antar ustadz\\n\\n📊 **STATISTIK KONSULTASI 2024**\\n\\n👥 **Total Konsultan:** 2,847 orang\\n💒 **Pernikahan:** 45%\\n💰 **Ekonomi:** 25%\\n👶 **Parenting:** 20%\\n🏢 **Pekerjaan:** 10%\\n\\n⭐ **Tingkat Kepuasan:** 98.5%\\n✅ **Masalah Terselesaikan:** 94%\\n🔄 **Konsultasi Ulang:** 15%\\n\\n🏆 **SERTIFIKASI & KREDIBILITAS**\\n\\n📜 **Ustadz Bersertifikat:**\\n• Lulusan Al-Azhar Mesir\\n• Ijazah dari ulama mu'tabar\\n• Anggota MUI Jakarta\\n• Pengalaman 15+ tahun\\n\\n🔍 **Metode Istinbath:**\\n• Al-Quran & As-Sunnah\\n• Ijma' ulama\\n• Qiyas & maslahah\\n• Pendapat mu'tabar\\n\\n📚 **Referensi Kitab:**\\n• Fiqh 4 Madzhab\\n• Fatwa MUI terkini\\n• Pendapat ulama kontemporer\\n• Jurnal Islamic studies\\n\\n🌐 **KONSULTASI ONLINE**\\n\\n💻 **Platform Digital:**\\n🔗 konsultasi.masjidalukhlas.id\\n📱 Mobile app: SyariahConsult\\n💬 WhatsApp Bot 24/7\\n📺 Live streaming Q&A\\n\\n🎯 **Fitur Unggulan:**\\n• Database fatwa lengkap\\n• Video penjelasan ustadz\\n• Komunitas diskusi\\n• Notifikasi jawaban\\n• History konsultasi\\n\\n💎 **Berkomitmen memberikan solusi syar'i terbaik untuk kehidupan Anda yang lebih berkah** 🤲`;\n  }\n};\n\n// Get appropriate response\nconst template = serviceTemplates[data.intent];\nif (!template) {\n  return [{\n    json: {\n      ...data,\n      response: `❌ Template untuk intent \"${data.intent}\" tidak ditemukan`,\n      hasError: true\n    }\n  }];\n}\n\nlet response = template();\n\n// Add personalization if user context available\nif (userContext.name) {\n  response = `السلام عليكم ورحمة الله وبركاته\\nAkhi/Ukhti ${userContext.name}\\n\\n` + response;\n}\n\n// Add enterprise signature\nresponse += `\\n\\n━━━━━━━━━━━━━━━━━━━━━\\n🕌 Masjid Al-Ikhlas Enterprise\\n📱 Islamic Service Center\\n🤖 AI Assistant v4.0\\n⚡ Serving Ummah 24/7`;\n\nreturn [{\n  json: {\n    ...data,\n    response: response,\n    responseType: 'STANDARD_SERVICE',\n    hasError: false,\n    processingNode: 'Standard Service Handler'\n  }\n}];"
      },
      "id": "9",
      "name": "📋 Standard Services",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1450, 600]
    },
    {
      "parameters": {
        "url": "https://api.fonnte.com/send",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "YOUR_WHATSAPP_API_KEY"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "target",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.response }}"
            },
            {
              "name": "countryCode",
              "value": "62"
            }
          ]
        }
      },
      "id": "10",
      "name": "📤 Multi-Provider Sender",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1700, 400]
    },
    {
      "parameters": {
        "url": "={{ $json.config.apis.supabase_url }}/rest/v1/analytics_comprehensive",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.config.apis.supabase_key }}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $json.config.apis.supabase_key }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=minimal"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "user_phone",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "intent",
              "value": "={{ $json.intent }}"
            },
            {
              "name": "confidence",
              "value": "={{ $json.confidence }}"
            },
            {
              "name": "response_type",
              "value": "={{ $json.responseType }}"
            },
            {
              "name": "ai_model",
              "value": "={{ $json.aiModel || 'standard' }}"
            },
            {
              "name": "ai_tokens",
              "value": "={{ $json.aiTokens || 0 }}"
            },
            {
              "name": "processing_time",
              "value": "={{ $json.processingTime }}"
            },
            {
              "name": "security_level",
              "value": "={{ $json.securityLevel }}"
            },
            {
              "name": "message_type",
              "value": "={{ $json.messageType }}"
            },
            {
              "name": "timestamp",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "session_id",
              "value": "={{ $json.phone }}_{{ new Date().getTime() }}"
            },
            {
              "name": "success",
              "value": true
            }
          ]
        }
      },
      "id": "11",
      "name": "📊 Advanced Analytics",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1700, 500]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.notifyAdmin }}",
              "operation": "equal",
              "value2": "true"
            }
          ]
        }
      },
      "id": "12",
      "name": "🔔 Admin Alert?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1950, 300]
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/bot6789123456:AAEhBOweik6ad6PsePOmDdQJ8Fd7-VfqNdA/sendMessage",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "-1001234567890"
            },
            {
              "name": "text",
              "value": "🚨 **ALERT - MASJID AI ENTERPRISE**\\n\\n📱 Phone: {{ $json.phone }}\\n🎯 Intent: {{ $json.intent }}\\n⚡ Priority: {{ $json.priority }}\\n🕐 Time: {{ $json.timestamp }}\\n📝 Message: {{ $json.message }}\\n\\n🤖 Response sent automatically\\n📊 Check dashboard for details"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        }
      },
      "id": "13",
      "name": "📢 Admin Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [2200, 250]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": true,\n  \"message\": \"Enterprise workflow completed successfully\",\n  \"data\": {\n    \"phone\": $json.phone,\n    \"intent\": $json.intent,\n    \"confidence\": $json.confidence,\n    \"response_type\": $json.responseType,\n    \"processing_time\": $json.processingTime + \"ms\",\n    \"security_level\": $json.securityLevel,\n    \"ai_model\": $json.aiModel || \"standard\",\n    \"timestamp\": $json.timestamp\n  },\n  \"enterprise_features\": {\n    \"multi_ai_models\": true,\n    \"advanced_security\": true,\n    \"comprehensive_analytics\": true,\n    \"admin_notifications\": true,\n    \"user_context\": true\n  }\n} }}"
      },
      "id": "14",
      "name": "✅ Enterprise Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2200, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"success\": false,\n  \"error\": \"Enterprise security violation\",\n  \"details\": {\n    \"error_type\": $json.errorType || \"unknown\",\n    \"security_errors\": $json.securityErrors || [],\n    \"phone\": $json.phone || \"unknown\",\n    \"timestamp\": $json.timestamp || new Date().toISOString()\n  },\n  \"action_required\": \"Contact administrator if this is a mistake\",\n  \"admin_contact\": \"+62-812-3456-7890\"\n} }}"
      },
      "id": "15",
      "name": "🚫 Security Block",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [950, 600]
    }
  ],
  "connections": {
    "🚪 Enterprise Webhook Gateway": {
      "main": [
        [
          {
            "node": "🛡️ Security & Parser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🛡️ Security & Parser": {
      "main": [
        [
          {
            "node": "🔍 Security Gate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 Security Gate": {
      "main": [
        [
          {
            "node": "👤 User Context Loader",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "🚫 Security Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "👤 User Context Loader": {
      "main": [
        [
          {
            "node": "🚨 Human Required?",
            "type": "main",
            "index": 0
          },
          {
            "node": "🤖 AI Required?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🚨 Human Required?": {
      "main": [
        [
          {
            "node": "🚨 Human Escalation",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "🤖 AI Required?": {
      "main": [
        [
          {
            "node": "🤖 Advanced AI Engine",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "📋 Standard Services",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🚨 Human Escalation": {
      "main": [
        [
          {
            "node": "📤 Multi-Provider Sender",
            "type": "main",
            "index": 0
          },
          {
            "node": "📊 Advanced Analytics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🤖 Advanced AI Engine": {
      "main": [
        [
          {
            "node": "📤 Multi-Provider Sender",
            "type": "main",
            "index": 0
          },
          {
            "node": "📊 Advanced Analytics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📋 Standard Services": {
      "main": [
        [
          {
            "node": "📤 Multi-Provider Sender",
            "type": "main",
            "index": 0
          },
          {
            "node": "📊 Advanced Analytics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📤 Multi-Provider Sender": {
      "main": [
        [
          {
            "node": "🔔 Admin Alert?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Advanced Analytics": {
      "main": [
        [
          {
            "node": "✅ Enterprise Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔔 Admin Alert?": {
      "main": [
        [
          {
            "node": "📢 Admin Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "✅ Enterprise Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📢 Admin Notification": {
      "main": [
        [
          {
            "node": "✅ Enterprise Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4.0",
  "id": "masjid-ai-enterprise-workflow",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": [
    {
      "id": "enterprise",
      "name": "Enterprise"
    },
    {
      "id": "masjid-ai",
      "name": "Masjid AI"
    },
    {
      "id": "multi-model",
      "name": "Multi Model AI"
    },
    {
      "id": "advanced-security",
      "name": "Advanced Security"
    }
  ]
}